#!/bin/sh
set -eu

# Inputs (comma or newline separated)
# ALLOW_DOMAINS:  e.g. ".github.com,api.github.com,.pypi.org"
# ALLOW_CIDRS:    e.g. "1.2.3.0/24, 2606:2800:220:1:248:1893:25c8:1946/128"
# ALLOW_PORTS:    e.g. "443,80,9418"  (optional, defaults to 80+443)
# BLOCK_BY_DEFAULT: "true"|"false" (default: true)
# DISABLE_CACHE: "true"|"false" (default: true)

ALLOW_DOMAINS="${ALLOW_DOMAINS:-}"
ALLOW_CIDRS="${ALLOW_CIDRS:-}"
ALLOW_PORTS="${ALLOW_PORTS:-}"
BLOCK_BY_DEFAULT="${BLOCK_BY_DEFAULT:-true}"
DISABLE_CACHE="${DISABLE_CACHE:-true}"

nl_to_space() {
  # turn newlines/commas into single spaces
  echo "$1" | tr '\n,' '  ' | xargs || true
}

# Clean and process inputs, ensuring empty strings stay empty
DOMAINS=""
if [ -n "$ALLOW_DOMAINS" ]; then
  DOMAINS="$(nl_to_space "$ALLOW_DOMAINS")"
fi

CIDRS=""
if [ -n "$ALLOW_CIDRS" ]; then
  CIDRS="$(nl_to_space "$ALLOW_CIDRS")"
fi

PORTS=""
if [ -n "$ALLOW_PORTS" ]; then
  PORTS="$(nl_to_space "$ALLOW_PORTS")"
else
  PORTS="80 443"
fi

# Build ACL snippets
DOMAINS_ACL=""
SNI_ACL=""
if [ -n "$DOMAINS" ]; then
  # split into tokens and emit multiple lines to keep squid happy with long lists
  for d in $DOMAINS; do
    DOMAINS_ACL="${DOMAINS_ACL}acl allowed_domains dstdomain ${d}
"
    SNI_ACL="${SNI_ACL}acl allowed_sni ssl::server_name ${d}
"
  done
fi

CIDRS_ACL=""
if [ -n "$CIDRS" ]; then
  for c in $CIDRS; do
    CIDRS_ACL="${CIDRS_ACL}acl allowed_cidrs dst ${c}
"
  done
fi

PORTS_ACL=""
if [ -n "$PORTS" ]; then
  PORTS_ACL="acl allowed_ports port ${PORTS}"
fi

# Access rules
# - Allow HTTPS CONNECT only if SNI or dest IP/CIDR is whitelisted AND port is allowed
# - Allow HTTP if domain/cidr + port allowed
# - If BLOCK_BY_DEFAULT=false, append 'allow all' at the end (not recommended)

# Build access rules conditionally
CONNECT_RULES=""
HTTP_RULES=""

# Add CONNECT rules only if we have SNI or CIDR ACLs
if [ -n "$SNI_ACL" ] && [ -n "$PORTS_ACL" ]; then
  CONNECT_RULES="${CONNECT_RULES}http_access allow CONNECT allowed_sni allowed_ports
"
fi
if [ -n "$CIDRS_ACL" ] && [ -n "$PORTS_ACL" ]; then
  CONNECT_RULES="${CONNECT_RULES}http_access allow CONNECT allowed_cidrs allowed_ports
"
fi

# Add HTTP rules only if we have domain or CIDR ACLs
if [ -n "$DOMAINS_ACL" ] && [ -n "$PORTS_ACL" ]; then
  HTTP_RULES="${HTTP_RULES}http_access allow allowed_domains allowed_ports
"
fi
if [ -n "$CIDRS_ACL" ] && [ -n "$PORTS_ACL" ]; then
  HTTP_RULES="${HTTP_RULES}http_access allow allowed_cidrs allowed_ports
"
fi

ALLOW_BLOCK_RULES=$(cat <<EOF
# Methods
acl CONNECT method CONNECT

# CONNECT rules (generated conditionally)
${CONNECT_RULES}
# Plain HTTP rules (generated conditionally)  
${HTTP_RULES}
# Deny everything else by default
http_access deny all
EOF
)

if [ "${BLOCK_BY_DEFAULT}" != "true" ]; then
  ALLOW_BLOCK_RULES=$(printf "%s\n%s\n" "$ALLOW_BLOCK_RULES" "http_access allow all")
fi

# Cache policy
CACHE_SECTION=""
if [ "${DISABLE_CACHE}" = "true" ]; then
  CACHE_SECTION=$(cat <<'EOF'
# Disable caching (pure forward proxy)
cache deny all
cache_mem 0 MB
maximum_object_size 0 KB
EOF
)
fi

# Build ACL section only with defined ACLs
ACL_SECTION=""
if [ -n "$DOMAINS_ACL" ]; then
  ACL_SECTION="${ACL_SECTION}$(printf "${DOMAINS_ACL}")"
fi
if [ -n "$SNI_ACL" ]; then
  ACL_SECTION="${ACL_SECTION}$(printf "${SNI_ACL}")"
fi
if [ -n "$CIDRS_ACL" ]; then
  ACL_SECTION="${ACL_SECTION}$(printf "${CIDRS_ACL}")"
fi
if [ -n "$PORTS_ACL" ]; then
  ACL_SECTION="${ACL_SECTION}${PORTS_ACL}"
fi

# Render /etc/squid/squid.conf
cat >/etc/squid/squid.conf <<EOF
# Generated by docker-entrypoint.sh

http_port 3128

# Privacy-ish
via off
forwarded_for delete

# Logs
access_log stdio:${SQUID_ACCESS_LOG:-/var/log/squid/access.log}
cache_log ${SQUID_CACHE_LOG:-/var/log/squid/cache.log}

${CACHE_SECTION}

# ---- ACLs (generated) ----
${ACL_SECTION}
# ---- Policy ----
${ALLOW_BLOCK_RULES}

# Be explicit: safe request/response sizes
request_body_max_size 64 MB
reply_body_max_size 0
EOF

# Debug output
echo "DEBUG: DOMAINS='$DOMAINS'"
echo "DEBUG: CIDRS='$CIDRS'"
echo "DEBUG: PORTS='$PORTS'"
echo "DEBUG: DOMAINS_ACL='$DOMAINS_ACL'"
echo "DEBUG: SNI_ACL='$SNI_ACL'"
echo "DEBUG: CIDRS_ACL='$CIDRS_ACL'"
echo "DEBUG: PORTS_ACL='$PORTS_ACL'"

# Show the generated configuration
echo "=== Generated squid.conf ==="
cat /etc/squid/squid.conf
echo "=== End of squid.conf ==="

# Start squid in foreground mode for Docker
exec squid -f /etc/squid/squid.conf -N